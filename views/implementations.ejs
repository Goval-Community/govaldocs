<h1>Goval Implementations</h1>

<h2>Clients</h2>

<ul>
    <li>
        <a href="https://github.com/replit/crosis">Crosis</a> - The official and
        still maintained javascript client for
        the goval protocol.
    </li>
    <li>
        <a href="https://github.com/CoolCoderSJ/pyrepl">PyRepl</a> - An
        unofficial python client implementation, it is
        out of date, and currently unmaintained.
    </li>
</ul>

<h2>Servers</h2>
<ul>
    <li>
        Official Implementation - This is the closed source implementation of
        the goval protocol, it consists of
        <code>conman</code> handling the websocket connections and forwarding
        messages to/from pid1. As well as
        <code>pid1</code> which runs inside the container as process 1, handling
        services and messages. Both
        <code>conman</code> and <code>pid1</code> are written in golang.
    </li>
    <li>
        Nodeval - A closed source, in development, implementation written in
        NodeJS by <a
            href="https://replit.com/@bddy">bddy</a> and <a
            href="https://replit.com/@haroon">haroon</a>.
    </li>
    <li>
        Homeval - A currently closed source, in development, implementation
        written in golang by <a
            href="https://replit.com/@PotentialStyx">PotentialStyx</a>.
    </li>
    <li>
        <a href="https://github.com/RoBlockHead/miroval">Miroval</a> - An open
        source, no longer in development, implementation
        written in deno by <a
            href="https://github.com/RoBlockHead">Miro</a>.
    </li>
</ul>

<hr>

<p>
    Have you written a client/server implementation and want it listed here? DM
    <code>PotentialStyx#2158</code> on
    discord
    with the information to get it listed here.</p>